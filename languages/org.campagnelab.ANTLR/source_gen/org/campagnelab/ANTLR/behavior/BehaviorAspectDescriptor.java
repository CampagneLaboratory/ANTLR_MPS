package org.campagnelab.ANTLR.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;

public class BehaviorAspectDescriptor implements jetbrains.mps.smodel.runtime.BehaviorAspectDescriptor {
  public BehaviorAspectDescriptor() {
  }
  public BehaviorDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0b, fqName)) {
      case 3:
        return new Grammar_BehaviorDescriptor();
      case 14:
        return new ParserRule_BehaviorDescriptor();
      case 1:
        return new Alternatives_BehaviorDescriptor();
      case 18:
        return new Sequence_BehaviorDescriptor();
      case 15:
        return new ParserRuleRef_BehaviorDescriptor();
      case 0:
        return new Alternative_BehaviorDescriptor();
      case 19:
        return new StringLiteral_BehaviorDescriptor();
      case 16:
        return new REGEXP_BehaviorDescriptor();
      case 13:
        return new Parentheses_BehaviorDescriptor();
      case 17:
        return new RuleRefByName_BehaviorDescriptor();
      case 2:
        return new Dot_BehaviorDescriptor();
      case 9:
        return new LexerRule_BehaviorDescriptor();
      case 10:
        return new LexerRuleBlock_BehaviorDescriptor();
      case 5:
        return new LexerAlt_BehaviorDescriptor();
      case 11:
        return new LexerRuleRef_BehaviorDescriptor();
      case 8:
        return new LexerElement_BehaviorDescriptor();
      case 12:
        return new LexerRuleRefByName_BehaviorDescriptor();
      case 6:
        return new LexerAltList_BehaviorDescriptor();
      case 4:
        return new HasOptionalParams_BehaviorDescriptor();
      case 7:
        return new LexerBlock_BehaviorDescriptor();
      default:
        return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
    }
  }
  private static String[] stringSwitchCases_846f5o_a0a0b = new String[]{"org.campagnelab.ANTLR.structure.Alternative", "org.campagnelab.ANTLR.structure.Alternatives", "org.campagnelab.ANTLR.structure.Dot", "org.campagnelab.ANTLR.structure.Grammar", "org.campagnelab.ANTLR.structure.HasOptionalParams", "org.campagnelab.ANTLR.structure.LexerAlt", "org.campagnelab.ANTLR.structure.LexerAltList", "org.campagnelab.ANTLR.structure.LexerBlock", "org.campagnelab.ANTLR.structure.LexerElement", "org.campagnelab.ANTLR.structure.LexerRule", "org.campagnelab.ANTLR.structure.LexerRuleBlock", "org.campagnelab.ANTLR.structure.LexerRuleRef", "org.campagnelab.ANTLR.structure.LexerRuleRefByName", "org.campagnelab.ANTLR.structure.Parentheses", "org.campagnelab.ANTLR.structure.ParserRule", "org.campagnelab.ANTLR.structure.ParserRuleRef", "org.campagnelab.ANTLR.structure.REGEXP", "org.campagnelab.ANTLR.structure.RuleRefByName", "org.campagnelab.ANTLR.structure.Sequence", "org.campagnelab.ANTLR.structure.StringLiteral"};
}

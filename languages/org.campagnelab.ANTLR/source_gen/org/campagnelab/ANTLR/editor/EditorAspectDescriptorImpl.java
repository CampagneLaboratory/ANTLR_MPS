package org.campagnelab.ANTLR.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {

  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0b, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new Alternative_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new Alternatives_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new Dot_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new Grammar_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new HasOptionalParams_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new LexerAlt_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new LexerAltList_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new LexerBlock_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new LexerElement_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new LexerRule_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new LexerRuleBlock_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new LexerRuleRef_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new LexerRuleRefByName_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new Parentheses_Editor());
      case 14:
        return Collections.<ConceptEditor>singletonList(new ParserRule_Editor());
      case 15:
        return Collections.<ConceptEditor>singletonList(new ParserRuleBlock_Editor());
      case 16:
        return Collections.<ConceptEditor>singletonList(new ParserRuleRef_Editor());
      case 17:
        return Collections.<ConceptEditor>singletonList(new REGEXP_Editor());
      case 18:
        return Collections.<ConceptEditor>singletonList(new RuleRefByName_Editor());
      case 19:
        return Collections.<ConceptEditor>singletonList(new Sequence_Editor());
      case 20:
        return Collections.<ConceptEditor>singletonList(new StringLiteral_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }
  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0c, descriptor.getConceptFqName())) {
      case 0:
        if ("org.campagnelab.ANTLR.editor.OptionalParamEditor".equals(editorComponentId)) {
          return Collections.<ConceptEditorComponent>singletonList(new OptionalParamEditor());
        }
        break;
      case 1:
        if ("org.campagnelab.ANTLR.editor.RHSEditor".equals(editorComponentId)) {
          return Collections.<ConceptEditorComponent>singletonList(new RHSEditor());
        }
        break;
      default:
    }
    return Collections.<ConceptEditorComponent>emptyList();
  }


  private static String[] stringSwitchCases_xbvbvu_a0a0b = new String[]{"org.campagnelab.ANTLR.structure.Alternative", "org.campagnelab.ANTLR.structure.Alternatives", "org.campagnelab.ANTLR.structure.Dot", "org.campagnelab.ANTLR.structure.Grammar", "org.campagnelab.ANTLR.structure.HasOptionalParams", "org.campagnelab.ANTLR.structure.LexerAlt", "org.campagnelab.ANTLR.structure.LexerAltList", "org.campagnelab.ANTLR.structure.LexerBlock", "org.campagnelab.ANTLR.structure.LexerElement", "org.campagnelab.ANTLR.structure.LexerRule", "org.campagnelab.ANTLR.structure.LexerRuleBlock", "org.campagnelab.ANTLR.structure.LexerRuleRef", "org.campagnelab.ANTLR.structure.LexerRuleRefByName", "org.campagnelab.ANTLR.structure.Parentheses", "org.campagnelab.ANTLR.structure.ParserRule", "org.campagnelab.ANTLR.structure.ParserRuleBlock", "org.campagnelab.ANTLR.structure.ParserRuleRef", "org.campagnelab.ANTLR.structure.REGEXP", "org.campagnelab.ANTLR.structure.RuleRefByName", "org.campagnelab.ANTLR.structure.Sequence", "org.campagnelab.ANTLR.structure.StringLiteral"};
  private static String[] stringSwitchCases_xbvbvu_a0a0c = new String[]{"org.campagnelab.ANTLR.structure.HasOptionalParams", "org.campagnelab.ANTLR.structure.ParserRuleBlock"};
}

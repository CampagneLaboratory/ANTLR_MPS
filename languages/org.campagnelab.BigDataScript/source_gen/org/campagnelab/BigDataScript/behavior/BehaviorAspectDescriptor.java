package org.campagnelab.BigDataScript.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;

public class BehaviorAspectDescriptor implements jetbrains.mps.smodel.runtime.BehaviorAspectDescriptor {
  public BehaviorAspectDescriptor() {
  }
  public BehaviorDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0b, fqName)) {
      case 66:
        return new ProgramUnit_BehaviorDescriptor();
      case 68:
        return new Statement_BehaviorDescriptor();
      case 0:
        return new BlockStatement_BehaviorDescriptor();
      case 1:
        return new BreakStatement_BehaviorDescriptor();
      case 2:
        return new BreakpointStatement_BehaviorDescriptor();
      case 3:
        return new CheckpointStatement_BehaviorDescriptor();
      case 4:
        return new ContinueStatement_BehaviorDescriptor();
      case 5:
        return new DebugStatement_BehaviorDescriptor();
      case 7:
        return new ExitStatement_BehaviorDescriptor();
      case 64:
        return new PrintStatement_BehaviorDescriptor();
      case 65:
        return new PrintlnStatement_BehaviorDescriptor();
      case 77:
        return new WarningStatement_BehaviorDescriptor();
      case 6:
        return new ErrorStatement_BehaviorDescriptor();
      case 48:
        return new ForLoopStatement_BehaviorDescriptor();
      case 47:
        return new ForLoopListStatement_BehaviorDescriptor();
      case 51:
        return new IfStatement_BehaviorDescriptor();
      case 52:
        return new KillStatement_BehaviorDescriptor();
      case 67:
        return new ReturnStatement_BehaviorDescriptor();
      case 76:
        return new WaitStatement_BehaviorDescriptor();
      case 78:
        return new WhileStatement_BehaviorDescriptor();
      case 50:
        return new FunctionDeclarationStatement_BehaviorDescriptor();
      case 71:
        return new StatementVarDeclarationStatement_BehaviorDescriptor();
      case 69:
        return new StatementExprStatement_BehaviorDescriptor();
      case 70:
        return new StatementIncludeStatement_BehaviorDescriptor();
      case 72:
        return new StatmentEolStatement_BehaviorDescriptor();
      case 8:
        return new Expression_BehaviorDescriptor();
      case 53:
        return new LiteralBoolExpression_BehaviorDescriptor();
      case 54:
        return new LiteralIntExpression_BehaviorDescriptor();
      case 59:
        return new LiteralRealExpression_BehaviorDescriptor();
      case 60:
        return new LiteralStringExpression_BehaviorDescriptor();
      case 49:
        return new FunctionCallExpression_BehaviorDescriptor();
      case 61:
        return new MethodCallExpression_BehaviorDescriptor();
      case 73:
        return new VarReferenceExpression_BehaviorDescriptor();
      case 74:
        return new VarReferenceListExpression_BehaviorDescriptor();
      case 75:
        return new VarReferenceMapExpression_BehaviorDescriptor();
      case 63:
        return new PreExpression_BehaviorDescriptor();
      case 62:
        return new PostExpression_BehaviorDescriptor();
      case 18:
        return new ExpressionBitNegationExpression_BehaviorDescriptor();
      case 31:
        return new ExpressionLogicNotExpression_BehaviorDescriptor();
      case 35:
        return new ExpressionModuloExpression_BehaviorDescriptor();
      case 24:
        return new ExpressionDivideExpression_BehaviorDescriptor();
      case 43:
        return new ExpressionTimesExpression_BehaviorDescriptor();
      case 34:
        return new ExpressionMinusExpression_BehaviorDescriptor();
      case 39:
        return new ExpressionPlusExpression_BehaviorDescriptor();
      case 33:
        return new ExpressionLtExpression_BehaviorDescriptor();
      case 28:
        return new ExpressionGtExpression_BehaviorDescriptor();
      case 29:
        return new ExpressionLeExpression_BehaviorDescriptor();
      case 26:
        return new ExpressionGeExpression_BehaviorDescriptor();
      case 36:
        return new ExpressionNeExpression_BehaviorDescriptor();
      case 25:
        return new ExpressionEqExpression_BehaviorDescriptor();
      case 44:
        return new ExpressionUnaryMinusExpression_BehaviorDescriptor();
      case 45:
        return new ExpressionUnaryPlusExpression_BehaviorDescriptor();
      case 17:
        return new ExpressionBitAndExpression_BehaviorDescriptor();
      case 20:
        return new ExpressionBitXorExpression_BehaviorDescriptor();
      case 19:
        return new ExpressionBitOrExpression_BehaviorDescriptor();
      case 30:
        return new ExpressionLogicAndExpression_BehaviorDescriptor();
      case 32:
        return new ExpressionLogicOrExpression_BehaviorDescriptor();
      case 38:
        return new ExpressionParenExpression_BehaviorDescriptor();
      case 21:
        return new ExpressionCondExpression_BehaviorDescriptor();
      case 23:
        return new ExpressionDepOperatorExpression_BehaviorDescriptor();
      case 55:
        return new LiteralListEmptyExpression_BehaviorDescriptor();
      case 56:
        return new LiteralListExpression_BehaviorDescriptor();
      case 57:
        return new LiteralMapEmptyExpression_BehaviorDescriptor();
      case 58:
        return new LiteralMapExpression_BehaviorDescriptor();
      case 40:
        return new ExpressionSysExpression_BehaviorDescriptor();
      case 42:
        return new ExpressionTaskLiteralExpression_BehaviorDescriptor();
      case 41:
        return new ExpressionTaskExpression_BehaviorDescriptor();
      case 22:
        return new ExpressionDepExpression_BehaviorDescriptor();
      case 27:
        return new ExpressionGoalExpression_BehaviorDescriptor();
      case 37:
        return new ExpressionParallelExpression_BehaviorDescriptor();
      case 10:
        return new ExpressionAssignmentBitOrExpression_BehaviorDescriptor();
      case 9:
        return new ExpressionAssignmentBitAndExpression_BehaviorDescriptor();
      case 11:
        return new ExpressionAssignmentDivExpression_BehaviorDescriptor();
      case 15:
        return new ExpressionAssignmentMultExpression_BehaviorDescriptor();
      case 14:
        return new ExpressionAssignmentMinusExpression_BehaviorDescriptor();
      case 16:
        return new ExpressionAssignmentPlusExpression_BehaviorDescriptor();
      case 13:
        return new ExpressionAssignmentListExpression_BehaviorDescriptor();
      case 12:
        return new ExpressionAssignmentExpression_BehaviorDescriptor();
      case 46:
        return new ExpressionVariableInitImplicitExpression_BehaviorDescriptor();
      default:
        return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
    }
  }
  private static String[] stringSwitchCases_846f5o_a0a0b = new String[]{"org.campagnelab.BigDataScript.structure.BlockStatement", "org.campagnelab.BigDataScript.structure.BreakStatement", "org.campagnelab.BigDataScript.structure.BreakpointStatement", "org.campagnelab.BigDataScript.structure.CheckpointStatement", "org.campagnelab.BigDataScript.structure.ContinueStatement", "org.campagnelab.BigDataScript.structure.DebugStatement", "org.campagnelab.BigDataScript.structure.ErrorStatement", "org.campagnelab.BigDataScript.structure.ExitStatement", "org.campagnelab.BigDataScript.structure.Expression", "org.campagnelab.BigDataScript.structure.ExpressionAssignmentBitAndExpression", "org.campagnelab.BigDataScript.structure.ExpressionAssignmentBitOrExpression", "org.campagnelab.BigDataScript.structure.ExpressionAssignmentDivExpression", "org.campagnelab.BigDataScript.structure.ExpressionAssignmentExpression", "org.campagnelab.BigDataScript.structure.ExpressionAssignmentListExpression", "org.campagnelab.BigDataScript.structure.ExpressionAssignmentMinusExpression", "org.campagnelab.BigDataScript.structure.ExpressionAssignmentMultExpression", "org.campagnelab.BigDataScript.structure.ExpressionAssignmentPlusExpression", "org.campagnelab.BigDataScript.structure.ExpressionBitAndExpression", "org.campagnelab.BigDataScript.structure.ExpressionBitNegationExpression", "org.campagnelab.BigDataScript.structure.ExpressionBitOrExpression", "org.campagnelab.BigDataScript.structure.ExpressionBitXorExpression", "org.campagnelab.BigDataScript.structure.ExpressionCondExpression", "org.campagnelab.BigDataScript.structure.ExpressionDepExpression", "org.campagnelab.BigDataScript.structure.ExpressionDepOperatorExpression", "org.campagnelab.BigDataScript.structure.ExpressionDivideExpression", "org.campagnelab.BigDataScript.structure.ExpressionEqExpression", "org.campagnelab.BigDataScript.structure.ExpressionGeExpression", "org.campagnelab.BigDataScript.structure.ExpressionGoalExpression", "org.campagnelab.BigDataScript.structure.ExpressionGtExpression", "org.campagnelab.BigDataScript.structure.ExpressionLeExpression", "org.campagnelab.BigDataScript.structure.ExpressionLogicAndExpression", "org.campagnelab.BigDataScript.structure.ExpressionLogicNotExpression", "org.campagnelab.BigDataScript.structure.ExpressionLogicOrExpression", "org.campagnelab.BigDataScript.structure.ExpressionLtExpression", "org.campagnelab.BigDataScript.structure.ExpressionMinusExpression", "org.campagnelab.BigDataScript.structure.ExpressionModuloExpression", "org.campagnelab.BigDataScript.structure.ExpressionNeExpression", "org.campagnelab.BigDataScript.structure.ExpressionParallelExpression", "org.campagnelab.BigDataScript.structure.ExpressionParenExpression", "org.campagnelab.BigDataScript.structure.ExpressionPlusExpression", "org.campagnelab.BigDataScript.structure.ExpressionSysExpression", "org.campagnelab.BigDataScript.structure.ExpressionTaskExpression", "org.campagnelab.BigDataScript.structure.ExpressionTaskLiteralExpression", "org.campagnelab.BigDataScript.structure.ExpressionTimesExpression", "org.campagnelab.BigDataScript.structure.ExpressionUnaryMinusExpression", "org.campagnelab.BigDataScript.structure.ExpressionUnaryPlusExpression", "org.campagnelab.BigDataScript.structure.ExpressionVariableInitImplicitExpression", "org.campagnelab.BigDataScript.structure.ForLoopListStatement", "org.campagnelab.BigDataScript.structure.ForLoopStatement", "org.campagnelab.BigDataScript.structure.FunctionCallExpression", "org.campagnelab.BigDataScript.structure.FunctionDeclarationStatement", "org.campagnelab.BigDataScript.structure.IfStatement", "org.campagnelab.BigDataScript.structure.KillStatement", "org.campagnelab.BigDataScript.structure.LiteralBoolExpression", "org.campagnelab.BigDataScript.structure.LiteralIntExpression", "org.campagnelab.BigDataScript.structure.LiteralListEmptyExpression", "org.campagnelab.BigDataScript.structure.LiteralListExpression", "org.campagnelab.BigDataScript.structure.LiteralMapEmptyExpression", "org.campagnelab.BigDataScript.structure.LiteralMapExpression", "org.campagnelab.BigDataScript.structure.LiteralRealExpression", "org.campagnelab.BigDataScript.structure.LiteralStringExpression", "org.campagnelab.BigDataScript.structure.MethodCallExpression", "org.campagnelab.BigDataScript.structure.PostExpression", "org.campagnelab.BigDataScript.structure.PreExpression", "org.campagnelab.BigDataScript.structure.PrintStatement", "org.campagnelab.BigDataScript.structure.PrintlnStatement", "org.campagnelab.BigDataScript.structure.ProgramUnit", "org.campagnelab.BigDataScript.structure.ReturnStatement", "org.campagnelab.BigDataScript.structure.Statement", "org.campagnelab.BigDataScript.structure.StatementExprStatement", "org.campagnelab.BigDataScript.structure.StatementIncludeStatement", "org.campagnelab.BigDataScript.structure.StatementVarDeclarationStatement", "org.campagnelab.BigDataScript.structure.StatmentEolStatement", "org.campagnelab.BigDataScript.structure.VarReferenceExpression", "org.campagnelab.BigDataScript.structure.VarReferenceListExpression", "org.campagnelab.BigDataScript.structure.VarReferenceMapExpression", "org.campagnelab.BigDataScript.structure.WaitStatement", "org.campagnelab.BigDataScript.structure.WarningStatement", "org.campagnelab.BigDataScript.structure.WhileStatement"};
}

package org.campagnelab.metar.R.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;

public class BehaviorAspectDescriptor implements jetbrains.mps.smodel.runtime.BehaviorAspectDescriptor {
  public BehaviorAspectDescriptor() {
  }
  public BehaviorDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0b, fqName)) {
      case 9:
        return new Atom_BehaviorDescriptor();
      case 10:
        return new BinaryOperationExpr_BehaviorDescriptor();
      case 11:
        return new BooleanOrExpr_BehaviorDescriptor();
      case 15:
        return new Expr_BehaviorDescriptor();
      case 37:
        return new [[Expr_BehaviorDescriptor();
      case 36:
        return new [Expr_BehaviorDescriptor();
      case 5:
        return new ::Expr_BehaviorDescriptor();
      case 14:
        return new DollarExpr_BehaviorDescriptor();
      case 29:
        return new NotExpr_BehaviorDescriptor();
      case 4:
        return new -Expr_BehaviorDescriptor();
      case 6:
        return new :Expr_BehaviorDescriptor();
      case 34:
        return new UserOpExpr_BehaviorDescriptor();
      case 25:
        return new MultExpr_BehaviorDescriptor();
      case 3:
        return new +Expr_BehaviorDescriptor();
      case 7:
        return new >Expr_BehaviorDescriptor();
      case 0:
        return new org.campagnelab.metar.R.behavior..Expr_BehaviorDescriptor();
      case 1:
        return new &Expr_BehaviorDescriptor();
      case 39:
        return new |Expr_BehaviorDescriptor();
      case 40:
        return new ~Expr_BehaviorDescriptor();
      case 19:
        return new FunctionExpr_BehaviorDescriptor();
      case 2:
        return new (Expr_BehaviorDescriptor();
      case 38:
        return new {Expr_BehaviorDescriptor();
      case 22:
        return new IfExpr_BehaviorDescriptor();
      case 18:
        return new ForExpr_BehaviorDescriptor();
      case 35:
        return new WhileExpr_BehaviorDescriptor();
      case 31:
        return new RepeatExpr_BehaviorDescriptor();
      case 8:
        return new ?Expr_BehaviorDescriptor();
      case 28:
        return new NextExpr_BehaviorDescriptor();
      case 12:
        return new BreakExpr_BehaviorDescriptor();
      case 21:
        return new IdExpr_BehaviorDescriptor();
      case 32:
        return new StringExpr_BehaviorDescriptor();
      case 20:
        return new HexExpr_BehaviorDescriptor();
      case 24:
        return new IntExpr_BehaviorDescriptor();
      case 17:
        return new FloatExpr_BehaviorDescriptor();
      case 13:
        return new ComplexExpr_BehaviorDescriptor();
      case 30:
        return new NullExpr_BehaviorDescriptor();
      case 26:
        return new NaExpr_BehaviorDescriptor();
      case 23:
        return new InfExpr_BehaviorDescriptor();
      case 27:
        return new NanExpr_BehaviorDescriptor();
      case 33:
        return new TrueExpr_BehaviorDescriptor();
      case 16:
        return new FalseExpr_BehaviorDescriptor();
      default:
        return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
    }
  }
  private static String[] stringSwitchCases_846f5o_a0a0b = new String[]{"org.campagnelab.metar.R.structure.!Expr", "org.campagnelab.metar.R.structure.&Expr", "org.campagnelab.metar.R.structure.(Expr", "org.campagnelab.metar.R.structure.+Expr", "org.campagnelab.metar.R.structure.-Expr", "org.campagnelab.metar.R.structure.::Expr", "org.campagnelab.metar.R.structure.:Expr", "org.campagnelab.metar.R.structure.>Expr", "org.campagnelab.metar.R.structure.?Expr", "org.campagnelab.metar.R.structure.Atom", "org.campagnelab.metar.R.structure.BinaryOperationExpr", "org.campagnelab.metar.R.structure.BooleanOrExpr", "org.campagnelab.metar.R.structure.BreakExpr", "org.campagnelab.metar.R.structure.ComplexExpr", "org.campagnelab.metar.R.structure.DollarExpr", "org.campagnelab.metar.R.structure.Expr", "org.campagnelab.metar.R.structure.FalseExpr", "org.campagnelab.metar.R.structure.FloatExpr", "org.campagnelab.metar.R.structure.ForExpr", "org.campagnelab.metar.R.structure.FunctionExpr", "org.campagnelab.metar.R.structure.HexExpr", "org.campagnelab.metar.R.structure.IdExpr", "org.campagnelab.metar.R.structure.IfExpr", "org.campagnelab.metar.R.structure.InfExpr", "org.campagnelab.metar.R.structure.IntExpr", "org.campagnelab.metar.R.structure.MultExpr", "org.campagnelab.metar.R.structure.NaExpr", "org.campagnelab.metar.R.structure.NanExpr", "org.campagnelab.metar.R.structure.NextExpr", "org.campagnelab.metar.R.structure.NotExpr", "org.campagnelab.metar.R.structure.NullExpr", "org.campagnelab.metar.R.structure.RepeatExpr", "org.campagnelab.metar.R.structure.StringExpr", "org.campagnelab.metar.R.structure.TrueExpr", "org.campagnelab.metar.R.structure.UserOpExpr", "org.campagnelab.metar.R.structure.WhileExpr", "org.campagnelab.metar.R.structure.[Expr", "org.campagnelab.metar.R.structure.[[Expr", "org.campagnelab.metar.R.structure.{Expr", "org.campagnelab.metar.R.structure.|Expr", "org.campagnelab.metar.R.structure.~Expr"};
}

package org.campagnelab.antlr.tomps.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBHDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.behaviour.api.BehaviorRegistry;
import jetbrains.mps.smodel.language.ConceptRegistry;
import jetbrains.mps.core.aspects.behaviour.api.SMethod;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.core.aspects.behaviour.SMethodBuilder;
import jetbrains.mps.core.aspects.behaviour.SJavaCompoundTypeImpl;
import jetbrains.mps.core.aspects.behaviour.SModifiersImpl;
import jetbrains.mps.core.aspects.behaviour.AccessPrivileges;
import java.util.List;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.internal.collections.runtime.IterableUtils;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.core.aspects.behaviour.api.SConstructor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.core.aspects.behaviour.api.BHMethodNotFoundException;

public final class AlternativeMapper__BehaviorDescriptor extends BaseBHDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getConcept(0x932d719ce93144d5L, 0x990ce115f79b5942L, 0x6a1bb02ea606232bL, "org.campagnelab.antlr.tomps.structure.AlternativeMapper");
  private static final BehaviorRegistry REGISTRY = ConceptRegistry.getInstance().getBehaviorRegistry();

  public static final SMethod<SNode> visitorReturnConcept_idv1yTSnUhdL = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("visitorReturnConcept").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("v1yTSnUhdL").registry(REGISTRY).build();
  public static final SMethod<SNode> grammar_idv1yTSnUxzJ = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("grammar").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("v1yTSnUxzJ").registry(REGISTRY).build();
  public static final SMethod<SNode> rule_idv1yTSoiJZk = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("rule").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("v1yTSoiJZk").registry(REGISTRY).build();
  public static final SMethod<SNode> converter_idv1yTSnUA_G = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("converter").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("v1yTSnUA_G").registry(REGISTRY).build();
  public static final SMethod<Boolean> hasSubConceptLabeledElement_idv1yTSoirSt = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("hasSubConceptLabeledElement").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("v1yTSoirSt").registry(REGISTRY).build();
  public static final SMethod<String> subConceptName_idv1yTSoiFby = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("subConceptName").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("v1yTSoiFby").registry(REGISTRY).build();
  /*package*/ static final SMethod<SNode> subConceptPrefix_idv1yTSoiHx9 = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("subConceptPrefix").modifiers(SModifiersImpl.create(0, AccessPrivileges.PRIVATE)).concept(CONCEPT).id("v1yTSoiHx9").registry(REGISTRY).build();
  /*package*/ static final SMethod<SNode> conceptMapper_idv1yTSoiNNC = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("conceptMapper").modifiers(SModifiersImpl.create(0, AccessPrivileges.PRIVATE)).concept(CONCEPT).id("v1yTSoiNNC").registry(REGISTRY).build();
  public static final SMethod<String> upperCaseFirstChar_idv1yTSoiOYi = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("upperCaseFirstChar").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("v1yTSoiOYi").registry(REGISTRY).build(SMethodBuilder.createJavaParameter(String.class, ""));
  public static final SMethod<String> upperToCamel_id4l9KHP9M1fx = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("upperToCamel").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("4l9KHP9M1fx").registry(REGISTRY).build(SMethodBuilder.createJavaParameter(String.class, ""));
  public static final SMethod<String> subConceptPrefix_idv1yTSorHAC = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("subConceptPrefix").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("v1yTSorHAC").registry(REGISTRY).build();
  public static final SMethod<Void> setLabelFromFirst_id4l9KHP9LHye = new SMethodBuilder<Void>(new SJavaCompoundTypeImpl(Void.class)).name("setLabelFromFirst").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("4l9KHP9LHye").registry(REGISTRY).build();
  public static final SMethod<Boolean> hasLabels_id59EVW_fnDMp = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("hasLabels").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("59EVW_fnDMp").registry(REGISTRY).build();
  /*package*/ static final SMethod<String> getNameFromNode_id4l9KHP9LGZf = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("getNameFromNode").modifiers(SModifiersImpl.create(0, AccessPrivileges.PRIVATE)).concept(CONCEPT).id("4l9KHP9LGZf").registry(REGISTRY).build(SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));

  private static final List<SMethod<?>> BH_METHODS = Arrays.<SMethod<?>>asList(visitorReturnConcept_idv1yTSnUhdL, grammar_idv1yTSnUxzJ, rule_idv1yTSoiJZk, converter_idv1yTSnUA_G, hasSubConceptLabeledElement_idv1yTSoirSt, subConceptName_idv1yTSoiFby, subConceptPrefix_idv1yTSoiHx9, conceptMapper_idv1yTSoiNNC, upperCaseFirstChar_idv1yTSoiOYi, upperToCamel_id4l9KHP9M1fx, subConceptPrefix_idv1yTSorHAC, setLabelFromFirst_id4l9KHP9LHye, hasLabels_id59EVW_fnDMp, getNameFromNode_id4l9KHP9LGZf);

  private static void ___init___(@NotNull SNode __thisNode__) {
  }

  /*package*/ static SNode visitorReturnConcept_idv1yTSnUhdL(@NotNull SNode __thisNode__) {
    if (SLinkOperations.getTarget(__thisNode__, MetaAdapterFactory.getReferenceLink(0x932d719ce93144d5L, 0x990ce115f79b5942L, 0x6a1bb02ea606232bL, 0x7c18b9e17e92154L, "returns")) != null) {
      return SLinkOperations.getTarget(__thisNode__, MetaAdapterFactory.getReferenceLink(0x932d719ce93144d5L, 0x990ce115f79b5942L, 0x6a1bb02ea606232bL, 0x7c18b9e17e92154L, "returns"));
    } else {
      return SLinkOperations.getTarget(AlternativeMapper__BehaviorDescriptor.conceptMapper_idv1yTSoiNNC.invoke(__thisNode__), MetaAdapterFactory.getReferenceLink(0x932d719ce93144d5L, 0x990ce115f79b5942L, 0x69d936b00a0eba02L, 0x69d936b00a0eba03L, "concept"));
    }
  }
  /*package*/ static SNode grammar_idv1yTSnUxzJ(@NotNull SNode __thisNode__) {
    return SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(__thisNode__, MetaAdapterFactory.getConcept(0x932d719ce93144d5L, 0x990ce115f79b5942L, 0x6a1bb02ea6061b82L, "org.campagnelab.antlr.tomps.structure.ConvertToMPS"), false, false), MetaAdapterFactory.getReferenceLink(0x932d719ce93144d5L, 0x990ce115f79b5942L, 0x6a1bb02ea6061b82L, 0x6a1bb02ea6061be9L, "grammar"));
  }
  /*package*/ static SNode rule_idv1yTSoiJZk(@NotNull SNode __thisNode__) {
    return SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(__thisNode__, MetaAdapterFactory.getReferenceLink(0x932d719ce93144d5L, 0x990ce115f79b5942L, 0x6a1bb02ea606232bL, 0x6a1bb02ea6062391L, "alternative")), MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x175f2668a88648aaL, "org.campagnelab.ANTLR.structure.Rule"), false, false);
  }
  /*package*/ static SNode converter_idv1yTSnUA_G(@NotNull SNode __thisNode__) {
    return SNodeOperations.getNodeAncestor(__thisNode__, MetaAdapterFactory.getConcept(0x932d719ce93144d5L, 0x990ce115f79b5942L, 0x6a1bb02ea6061b82L, "org.campagnelab.antlr.tomps.structure.ConvertToMPS"), false, false);
  }
  /*package*/ static boolean hasSubConceptLabeledElement_idv1yTSoirSt(@NotNull SNode __thisNode__) {
    return (AlternativeMapper__BehaviorDescriptor.subConceptPrefix_idv1yTSoiHx9.invoke(__thisNode__) != null) || SPropertyOperations.getBoolean(SLinkOperations.getTarget(__thisNode__, MetaAdapterFactory.getReferenceLink(0x932d719ce93144d5L, 0x990ce115f79b5942L, 0x6a1bb02ea606232bL, 0x6a1bb02ea6062391L, "alternative")), MetaAdapterFactory.getProperty(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe3113b458fL, 0x6d831d6acf051327L, "hasLabel"));
  }
  /*package*/ static String subConceptName_idv1yTSoiFby(@NotNull SNode __thisNode__) {
    String name = AlternativeMapper__BehaviorDescriptor.subConceptPrefix_idv1yTSorHAC.invoke(__thisNode__);
    return ((String) AlternativeMapper__BehaviorDescriptor.upperCaseFirstChar_idv1yTSoiOYi.invoke(__thisNode__, name + SPropertyOperations.getString(SLinkOperations.getTarget(AlternativeMapper__BehaviorDescriptor.conceptMapper_idv1yTSoiNNC.invoke(__thisNode__), MetaAdapterFactory.getReferenceLink(0x932d719ce93144d5L, 0x990ce115f79b5942L, 0x69d936b00a0eba02L, 0x69d936b00a0eba03L, "concept")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"))));
  }
  /*package*/ static SNode subConceptPrefix_idv1yTSoiHx9(@NotNull SNode __thisNode__) {
    return ListSequence.fromList(SNodeOperations.getNodeDescendants(SLinkOperations.getTarget(__thisNode__, MetaAdapterFactory.getReferenceLink(0x932d719ce93144d5L, 0x990ce115f79b5942L, 0x6a1bb02ea606232bL, 0x6a1bb02ea6062391L, "alternative")), MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x7c18b9e17b73a85L, "org.campagnelab.ANTLR.structure.LabeledElement"), true, new SAbstractConcept[]{})).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return eq_gln0av_a0a0a0a0a0a0cb(SPropertyOperations.getString(it, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")), "subConceptPrefix");
      }
    });
  }
  /*package*/ static SNode conceptMapper_idv1yTSoiNNC(@NotNull final SNode __thisNode__) {
    // chache result for faster queries. 
    return ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.getNodeAncestor(__thisNode__, MetaAdapterFactory.getConcept(0x932d719ce93144d5L, 0x990ce115f79b5942L, 0x6a1bb02ea6061b82L, "org.campagnelab.antlr.tomps.structure.ConvertToMPS"), false, false), MetaAdapterFactory.getContainmentLink(0x932d719ce93144d5L, 0x990ce115f79b5942L, 0x6a1bb02ea6061b82L, 0x69d936b00a0eba08L, "conceptMapper"))).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0x932d719ce93144d5L, 0x990ce115f79b5942L, 0x69d936b00a0eba02L, 0x69d936b00a0eba05L, "rule")) == SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(__thisNode__, MetaAdapterFactory.getReferenceLink(0x932d719ce93144d5L, 0x990ce115f79b5942L, 0x6a1bb02ea606232bL, 0x6a1bb02ea6062391L, "alternative")), MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x175f2668a88648aaL, "org.campagnelab.ANTLR.structure.Rule"), false, false);
      }
    });
    // TODO remove next lines 
  }
  /*package*/ static String upperCaseFirstChar_idv1yTSoiOYi(@NotNull SNode __thisNode__, String value) {
    return "" + Character.toUpperCase(value.charAt(0)) + value.substring(1, value.length()).toString();
  }
  /*package*/ static String upperToCamel_id4l9KHP9M1fx(@NotNull final SNode __thisNode__, String value) {
    return IterableUtils.join(Sequence.fromIterable(Sequence.fromArray(value.split("[_]"))).select(new ISelector<String, String>() {
      public String select(String token) {
        return ((String) AlternativeMapper__BehaviorDescriptor.upperCaseFirstChar_idv1yTSoiOYi.invoke(__thisNode__, token.toLowerCase()));
      }
    }), "");
  }
  /*package*/ static String subConceptPrefix_idv1yTSorHAC(@NotNull SNode __thisNode__) {
    if (SPropertyOperations.getBoolean(SLinkOperations.getTarget(__thisNode__, MetaAdapterFactory.getReferenceLink(0x932d719ce93144d5L, 0x990ce115f79b5942L, 0x6a1bb02ea606232bL, 0x6a1bb02ea6062391L, "alternative")), MetaAdapterFactory.getProperty(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe3113b458fL, 0x6d831d6acf051327L, "hasLabel"))) {
      return SPropertyOperations.getString(SLinkOperations.getTarget(__thisNode__, MetaAdapterFactory.getReferenceLink(0x932d719ce93144d5L, 0x990ce115f79b5942L, 0x6a1bb02ea606232bL, 0x6a1bb02ea6062391L, "alternative")), MetaAdapterFactory.getProperty(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe3113b458fL, 0x6d831d6acef0ba05L, "label"));
    }
    SNode element = SLinkOperations.getTarget(AlternativeMapper__BehaviorDescriptor.subConceptPrefix_idv1yTSoiHx9.invoke(__thisNode__), MetaAdapterFactory.getContainmentLink(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x7c18b9e17b73a85L, 0x7c18b9e17b7c72fL, "element"));
    return AlternativeMapper__BehaviorDescriptor.getNameFromNode_id4l9KHP9LGZf.invoke(__thisNode__, element);
  }
  /*package*/ static void setLabelFromFirst_id4l9KHP9LHye(@NotNull SNode __thisNode__) {
    if (!(SPropertyOperations.getBoolean(SLinkOperations.getTarget(__thisNode__, MetaAdapterFactory.getReferenceLink(0x932d719ce93144d5L, 0x990ce115f79b5942L, 0x6a1bb02ea606232bL, 0x6a1bb02ea6062391L, "alternative")), MetaAdapterFactory.getProperty(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe3113b458fL, 0x6d831d6acf051327L, "hasLabel")))) {
      SNode first = ListSequence.fromList(SNodeOperations.getNodeDescendantsWhereConceptInList(SLinkOperations.getTarget(__thisNode__, MetaAdapterFactory.getReferenceLink(0x932d719ce93144d5L, 0x990ce115f79b5942L, 0x6a1bb02ea606232bL, 0x6a1bb02ea6062391L, "alternative")), new SAbstractConcept[]{MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe3113e657fL, "org.campagnelab.ANTLR.structure.StringLiteral"), MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x175f2668a890ef9eL, "org.campagnelab.ANTLR.structure.LexerRuleRef"), MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x7c18b9e172f3f03L, "org.campagnelab.ANTLR.structure.TokenRef")}, false, new SAbstractConcept[]{})).first();
      if (first != null) {
        String name = AlternativeMapper__BehaviorDescriptor.getNameFromNode_id4l9KHP9LGZf.invoke(__thisNode__, first);
        SPropertyOperations.set(SLinkOperations.getTarget(__thisNode__, MetaAdapterFactory.getReferenceLink(0x932d719ce93144d5L, 0x990ce115f79b5942L, 0x6a1bb02ea606232bL, 0x6a1bb02ea6062391L, "alternative")), MetaAdapterFactory.getProperty(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe3113b458fL, 0x6d831d6acf051327L, "hasLabel"), "" + (true));
        SPropertyOperations.set(SLinkOperations.getTarget(__thisNode__, MetaAdapterFactory.getReferenceLink(0x932d719ce93144d5L, 0x990ce115f79b5942L, 0x6a1bb02ea606232bL, 0x6a1bb02ea6062391L, "alternative")), MetaAdapterFactory.getProperty(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe3113b458fL, 0x6d831d6acef0ba05L, "label"), AlternativeMapper__BehaviorDescriptor.getNameFromNode_id4l9KHP9LGZf.invoke(__thisNode__, first));
      }
    }
  }
  /*package*/ static boolean hasLabels_id59EVW_fnDMp(@NotNull SNode __thisNode__) {
    return ListSequence.fromList(SNodeOperations.getNodeDescendants(SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(__thisNode__, MetaAdapterFactory.getReferenceLink(0x932d719ce93144d5L, 0x990ce115f79b5942L, 0x6a1bb02ea606232bL, 0x6a1bb02ea6062391L, "alternative")), MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x175f2668a88648aaL, "org.campagnelab.ANTLR.structure.Rule"), false, false), MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe3113b458fL, "org.campagnelab.ANTLR.structure.Alternative"), false, new SAbstractConcept[]{})).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode alt) {
        return SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getParent(alt)), MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x175f2668a88648aaL, "org.campagnelab.ANTLR.structure.Rule"));
      }
    }).all(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getBoolean(it, MetaAdapterFactory.getProperty(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe3113b458fL, 0x6d831d6acf051327L, "hasLabel"));
      }
    });
  }
  /*package*/ static String getNameFromNode_id4l9KHP9LGZf(@NotNull SNode __thisNode__, SNode element) {
    {
      final SNode l = element;
      if (SNodeOperations.isInstanceOf(l, MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe3113e657fL, "org.campagnelab.ANTLR.structure.StringLiteral"))) {
        return AlternativeMapper__BehaviorDescriptor.upperCaseFirstChar_idv1yTSoiOYi.invoke(__thisNode__, SPropertyOperations.getString(SNodeOperations.cast(element, MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe3113e657fL, "org.campagnelab.ANTLR.structure.StringLiteral")), MetaAdapterFactory.getProperty(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe3113e657fL, 0x631eebe3113e6580L, "literal")).toLowerCase());
      }
    }
    {
      final SNode l = element;
      if (SNodeOperations.isInstanceOf(l, MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x175f2668a890ef9eL, "org.campagnelab.ANTLR.structure.LexerRuleRef"))) {
        return AlternativeMapper__BehaviorDescriptor.upperToCamel_id4l9KHP9M1fx.invoke(__thisNode__, SPropertyOperations.getString(SLinkOperations.getTarget(SNodeOperations.cast(element, MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x175f2668a890ef9eL, "org.campagnelab.ANTLR.structure.LexerRuleRef")), MetaAdapterFactory.getReferenceLink(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x175f2668a890ef9eL, 0x175f2668a890ef9fL, "rule")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")).toLowerCase());
      }
    }
    {
      final SNode t = element;
      if (SNodeOperations.isInstanceOf(t, MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x7c18b9e172f3f03L, "org.campagnelab.ANTLR.structure.TokenRef"))) {
        return AlternativeMapper__BehaviorDescriptor.upperToCamel_id4l9KHP9M1fx.invoke(__thisNode__, SPropertyOperations.getString(SLinkOperations.getTarget(SNodeOperations.cast(element, MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x7c18b9e172f3f03L, "org.campagnelab.ANTLR.structure.TokenRef")), MetaAdapterFactory.getReferenceLink(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x7c18b9e172f3f03L, 0x7c18b9e172f3f04L, "token")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")).toLowerCase());
      }
    }
    return null;
  }

  /*package*/ AlternativeMapper__BehaviorDescriptor() {
    super(REGISTRY);
  }

  @Override
  protected void initNode(@NotNull SNode node, @NotNull SConstructor constructor, @Nullable Object[] parameters) {
    ___init___(node);
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SNode node, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 0:
        return (T) ((SNode) visitorReturnConcept_idv1yTSnUhdL(node));
      case 1:
        return (T) ((SNode) grammar_idv1yTSnUxzJ(node));
      case 2:
        return (T) ((SNode) rule_idv1yTSoiJZk(node));
      case 3:
        return (T) ((SNode) converter_idv1yTSnUA_G(node));
      case 4:
        return (T) ((Boolean) hasSubConceptLabeledElement_idv1yTSoirSt(node));
      case 5:
        return (T) ((String) subConceptName_idv1yTSoiFby(node));
      case 6:
        return (T) ((SNode) subConceptPrefix_idv1yTSoiHx9(node));
      case 7:
        return (T) ((SNode) conceptMapper_idv1yTSoiNNC(node));
      case 8:
        return (T) ((String) upperCaseFirstChar_idv1yTSoiOYi(node, (String) parameters[0]));
      case 9:
        return (T) ((String) upperToCamel_id4l9KHP9M1fx(node, (String) parameters[0]));
      case 10:
        return (T) ((String) subConceptPrefix_idv1yTSorHAC(node));
      case 11:
        setLabelFromFirst_id4l9KHP9LHye(node);
        return null;
      case 12:
        return (T) ((Boolean) hasLabels_id59EVW_fnDMp(node));
      case 13:
        return (T) ((String) getNameFromNode_id4l9KHP9LGZf(node, (SNode) parameters[0]));
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SAbstractConcept concept, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @NotNull
  @Override
  public List<SMethod<?>> getDeclaredMethods() {
    return BH_METHODS;
  }

  @NotNull
  @Override
  public SAbstractConcept getConcept() {
    return CONCEPT;
  }
  private static boolean eq_gln0av_a0a0a0a0a0a0cb(Object a, Object b) {
    return (a != null ? a.equals(b) : a == b);
  }
}

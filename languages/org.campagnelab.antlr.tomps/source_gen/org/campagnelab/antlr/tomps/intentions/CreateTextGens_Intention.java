package org.campagnelab.antlr.tomps.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.IntentionFactory;
import java.util.Collection;
import jetbrains.mps.intentions.IntentionExecutable;
import jetbrains.mps.intentions.IntentionType;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Collections;
import org.campagnelab.antlr.tomps.behavior.ConceptMapper_Behavior;
import jetbrains.mps.intentions.IntentionDescriptor;

public class CreateTextGens_Intention implements IntentionFactory {
  private Collection<IntentionExecutable> myCachedExecutable;
  public CreateTextGens_Intention() {
  }
  public String getConcept() {
    return "org.campagnelab.antlr.tomps.structure.ConceptMapper";
  }
  public String getPresentation() {
    return "CreateTextGens";
  }
  public String getPersistentStateKey() {
    return "org.campagnelab.antlr.tomps.intentions.CreateTextGens_Intention";
  }
  public String getLanguageFqName() {
    return "org.campagnelab.antlr.tomps";
  }
  public IntentionType getType() {
    return IntentionType.NORMAL;
  }
  public boolean isAvailableInChildNodes() {
    return false;
  }
  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    return true;
  }
  public SNodeReference getIntentionNodeReference() {
    return new SNodePointer("r:3172cd41-bcad-4d57-92e5-868449e54828(org.campagnelab.antlr.tomps.intentions)", "4522383332285829017");
  }
  public boolean isSurroundWith() {
    return false;
  }
  public Collection<IntentionExecutable> instances(final SNode node, final EditorContext context) {
    if (myCachedExecutable == null) {
      myCachedExecutable = Collections.<IntentionExecutable>singletonList(new CreateTextGens_Intention.IntentionImplementation());
    }
    return myCachedExecutable;
  }
  public class IntentionImplementation implements IntentionExecutable {
    public IntentionImplementation() {
    }
    public String getDescription(final SNode node, final EditorContext editorContext) {
      return "Create TextGens";
    }
    public void execute(final SNode node, final EditorContext editorContext) {
      ConceptMapper_Behavior.call_createTextGens_4522383332274891802(node);
    }
    public IntentionDescriptor getDescriptor() {
      return CreateTextGens_Intention.this;
    }
  }
}

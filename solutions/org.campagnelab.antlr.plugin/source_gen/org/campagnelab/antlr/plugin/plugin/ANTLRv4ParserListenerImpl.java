package org.campagnelab.antlr.plugin.plugin;

/*Generated by MPS */

import org.antlr.ANTLRv4ParserListener;
import org.antlr.ANTLRv4Parser;
import java.util.List;
import org.jetbrains.mps.openapi.model.SNode;
import java.util.ArrayList;
import org.antlr.v4.runtime.misc.NotNull;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.antlr.v4.runtime.tree.TerminalNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ISelector;
import org.antlr.v4.runtime.tree.ErrorNode;
import org.antlr.v4.runtime.ParserRuleContext;
import org.apache.log4j.Logger;
import org.apache.log4j.LogManager;

public class ANTLRv4ParserListenerImpl implements ANTLRv4ParserListener {
  private ANTLRv4Parser parser;

  /*package*/ List<SNode> rules = new ArrayList<SNode>();
  public void enterGrammarSpec(@NotNull ANTLRv4Parser.GrammarSpecContext context) {
  }
  public void exitGrammarSpec(@NotNull ANTLRv4Parser.GrammarSpecContext context) {
  }
  public void enterGrammarType(@NotNull ANTLRv4Parser.GrammarTypeContext context) {
  }
  public void exitGrammarType(@NotNull ANTLRv4Parser.GrammarTypeContext context) {
  }
  public void enterPrequelConstruct(@NotNull ANTLRv4Parser.PrequelConstructContext context) {
  }
  public void exitPrequelConstruct(@NotNull ANTLRv4Parser.PrequelConstructContext context) {
  }
  public void enterOptionsSpec(@NotNull ANTLRv4Parser.OptionsSpecContext context) {
  }
  public void exitOptionsSpec(@NotNull ANTLRv4Parser.OptionsSpecContext context) {
  }
  public void enterOption(@NotNull ANTLRv4Parser.OptionContext context) {
  }
  public void exitOption(@NotNull ANTLRv4Parser.OptionContext context) {
  }
  public void enterOptionValue(@NotNull ANTLRv4Parser.OptionValueContext context) {
  }
  public void exitOptionValue(@NotNull ANTLRv4Parser.OptionValueContext context) {
  }
  public void enterDelegateGrammars(@NotNull ANTLRv4Parser.DelegateGrammarsContext context) {
  }
  public void exitDelegateGrammars(@NotNull ANTLRv4Parser.DelegateGrammarsContext context) {
  }
  public void enterDelegateGrammar(@NotNull ANTLRv4Parser.DelegateGrammarContext context) {
  }
  public void exitDelegateGrammar(@NotNull ANTLRv4Parser.DelegateGrammarContext context) {
  }
  public void enterTokensSpec(@NotNull ANTLRv4Parser.TokensSpecContext context) {
  }
  public void exitTokensSpec(@NotNull ANTLRv4Parser.TokensSpecContext context) {
  }
  public void enterAction(@NotNull ANTLRv4Parser.ActionContext context) {
  }
  public void exitAction(@NotNull ANTLRv4Parser.ActionContext context) {
  }
  public void enterActionScopeName(@NotNull ANTLRv4Parser.ActionScopeNameContext context) {
  }
  public void exitActionScopeName(@NotNull ANTLRv4Parser.ActionScopeNameContext context) {
  }
  public void enterModeSpec(@NotNull ANTLRv4Parser.ModeSpecContext context) {
  }
  public void exitModeSpec(@NotNull ANTLRv4Parser.ModeSpecContext context) {
  }
  public void enterRules(@NotNull ANTLRv4Parser.RulesContext context) {
  }
  public void exitRules(@NotNull ANTLRv4Parser.RulesContext context) {
  }
  public void enterRuleSpec(@NotNull ANTLRv4Parser.RuleSpecContext context) {
  }
  public void exitRuleSpec(@NotNull ANTLRv4Parser.RuleSpecContext context) {
  }
  /*package*/ SNode rule;

  public void enterParserRuleSpec(@NotNull ANTLRv4Parser.ParserRuleSpecContext context) {
    rule = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe31132d838L, "org.campagnelab.ANTLR.structure.Rule")));
    ListSequence.fromList(refs).clear();
  }
  public void exitParserRuleSpec(@NotNull ANTLRv4Parser.ParserRuleSpecContext context) {
    if (rule != null) {
      TerminalNode node = context.RULE_REF();
      String name;

      if (node == null) {
        name = "<no-name>";
      } else {
        name = node.getText();
      }
      SPropertyOperations.set(rule, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), name);

      /*
        SNode alts = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe31132d842L, "org.campagnelab.ANTLR.structure.Alternatives")));
        ListSequence.fromList(SLinkOperations.getChildren(alts, MetaAdapterFactory.getContainmentLink(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe31132d842L, 0x631eebe31132d969L, "oneOf"))).clear();
        ListSequence.fromList(SLinkOperations.getChildren(alts, MetaAdapterFactory.getContainmentLink(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe31132d842L, 0x631eebe31132d969L, "oneOf"))).addSequence(ListSequence.fromList(refs).select(new ISelector<SNode, SNode>() {
          public SNode select(SNode it) {
            SNode alt = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe3113b458fL, "org.campagnelab.ANTLR.structure.Alternative")));
            SLinkOperations.setTarget(alt, MetaAdapterFactory.getContainmentLink(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe3113b458fL, 0x631eebe3113b4590L, "rhs"), it);
            return alt;
          }
        }));
        refs.clear();
      */
      SLinkOperations.setTarget(rule, MetaAdapterFactory.getContainmentLink(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe31132d838L, 0x631eebe31132d844L, "rhs"), alternatives);
      alternatives = null;
      ListSequence.fromList(rules).addElement(rule);
      if (LOG.isInfoEnabled()) {
        LOG.info("exitParserRuleSpec " + context.getText());
      }
    }

  }
  public void enterExceptionGroup(@NotNull ANTLRv4Parser.ExceptionGroupContext context) {
  }
  public void exitExceptionGroup(@NotNull ANTLRv4Parser.ExceptionGroupContext context) {
  }
  public void enterExceptionHandler(@NotNull ANTLRv4Parser.ExceptionHandlerContext context) {
  }
  public void exitExceptionHandler(@NotNull ANTLRv4Parser.ExceptionHandlerContext context) {
  }
  public void enterFinallyClause(@NotNull ANTLRv4Parser.FinallyClauseContext context) {
  }
  public void exitFinallyClause(@NotNull ANTLRv4Parser.FinallyClauseContext context) {
  }
  public void enterRulePrequel(@NotNull ANTLRv4Parser.RulePrequelContext context) {
  }
  public void exitRulePrequel(@NotNull ANTLRv4Parser.RulePrequelContext context) {
  }
  public void enterRuleReturns(@NotNull ANTLRv4Parser.RuleReturnsContext context) {
  }
  public void exitRuleReturns(@NotNull ANTLRv4Parser.RuleReturnsContext context) {
  }
  public void enterThrowsSpec(@NotNull ANTLRv4Parser.ThrowsSpecContext context) {
  }
  public void exitThrowsSpec(@NotNull ANTLRv4Parser.ThrowsSpecContext context) {
  }
  public void enterLocalsSpec(@NotNull ANTLRv4Parser.LocalsSpecContext context) {
  }
  public void exitLocalsSpec(@NotNull ANTLRv4Parser.LocalsSpecContext context) {
  }
  public void enterRuleAction(@NotNull ANTLRv4Parser.RuleActionContext context) {
  }
  public void exitRuleAction(@NotNull ANTLRv4Parser.RuleActionContext context) {
  }
  public void enterRuleModifiers(@NotNull ANTLRv4Parser.RuleModifiersContext context) {
  }
  public void exitRuleModifiers(@NotNull ANTLRv4Parser.RuleModifiersContext context) {
  }
  public void enterRuleModifier(@NotNull ANTLRv4Parser.RuleModifierContext context) {
  }
  public void exitRuleModifier(@NotNull ANTLRv4Parser.RuleModifierContext context) {
  }
  public void enterRuleBlock(@NotNull ANTLRv4Parser.RuleBlockContext context) {
  }
  public void exitRuleBlock(@NotNull ANTLRv4Parser.RuleBlockContext context) {
    if (LOG.isInfoEnabled()) {
      LOG.info("exitRuleBlock " + context.getText());
    }
  }
  public void enterRuleAltList(@NotNull ANTLRv4Parser.RuleAltListContext context) {
  }
  public void exitRuleAltList(@NotNull ANTLRv4Parser.RuleAltListContext context) {
    if (LOG.isInfoEnabled()) {
      LOG.info("exitRuleAltList " + context.getText());
    }
  }
  public void enterLabeledAlt(@NotNull ANTLRv4Parser.LabeledAltContext context) {
  }
  public void exitLabeledAlt(@NotNull ANTLRv4Parser.LabeledAltContext context) {
  }
  public void enterLexerRule(@NotNull ANTLRv4Parser.LexerRuleContext context) {
  }
  public void exitLexerRule(@NotNull ANTLRv4Parser.LexerRuleContext context) {
  }
  public void enterLexerRuleBlock(@NotNull ANTLRv4Parser.LexerRuleBlockContext context) {
  }
  public void exitLexerRuleBlock(@NotNull ANTLRv4Parser.LexerRuleBlockContext context) {
  }
  /*package*/ SNode alternatives;
  public void enterLexerAltList(@NotNull ANTLRv4Parser.LexerAltListContext context) {
    alternatives = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe31132d842L, "org.campagnelab.ANTLR.structure.Alternatives")));
    SLinkOperations.getChildren(alternatives, MetaAdapterFactory.getContainmentLink(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe31132d842L, 0x631eebe31132d969L, "oneOf")).clear();
  }
  /*package*/ SNode currentRHS;
  public void exitLexerAltList(@NotNull ANTLRv4Parser.LexerAltListContext context) {
    currentRHS = alternatives;
  }
  /*package*/ SNode alt;
  public void enterLexerAlt(@NotNull ANTLRv4Parser.LexerAltContext context) {
    alt = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe3113b458fL, "org.campagnelab.ANTLR.structure.Alternative")));
  }
  public SNode createRef(String name) {
    SNode refByName = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x1ebae6380de70d78L, "org.campagnelab.ANTLR.structure.RuleRefByName")));
    SPropertyOperations.set(refByName, MetaAdapterFactory.getProperty(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x1ebae6380de70d78L, 0x1ebae6380de70d79L, "name"), name);
    return refByName;
  }
  public void exitLexerAlt(@NotNull ANTLRv4Parser.LexerAltContext context) {
    SLinkOperations.setTarget(alt, MetaAdapterFactory.getContainmentLink(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe3113b458fL, 0x631eebe3113b4590L, "rhs"), createRef(context.getText()));
    ListSequence.fromList(SLinkOperations.getChildren(alternatives, MetaAdapterFactory.getContainmentLink(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe31132d842L, 0x631eebe31132d969L, "oneOf"))).addElement(alt);
  }
  public void enterLexerElements(@NotNull ANTLRv4Parser.LexerElementsContext context) {
  }
  public void exitLexerElements(@NotNull ANTLRv4Parser.LexerElementsContext context) {
  }
  public void enterLexerElement(@NotNull ANTLRv4Parser.LexerElementContext context) {
  }
  public void exitLexerElement(@NotNull ANTLRv4Parser.LexerElementContext context) {
  }
  public void enterLabeledLexerElement(@NotNull ANTLRv4Parser.LabeledLexerElementContext context) {
  }
  public void exitLabeledLexerElement(@NotNull ANTLRv4Parser.LabeledLexerElementContext context) {
  }
  public void enterLexerBlock(@NotNull ANTLRv4Parser.LexerBlockContext context) {
  }
  public void exitLexerBlock(@NotNull ANTLRv4Parser.LexerBlockContext context) {
  }
  public void enterLexerCommands(@NotNull ANTLRv4Parser.LexerCommandsContext context) {
  }
  public void exitLexerCommands(@NotNull ANTLRv4Parser.LexerCommandsContext context) {
  }
  public void enterLexerCommand(@NotNull ANTLRv4Parser.LexerCommandContext context) {
  }
  public void exitLexerCommand(@NotNull ANTLRv4Parser.LexerCommandContext context) {
  }
  public void enterLexerCommandName(@NotNull ANTLRv4Parser.LexerCommandNameContext context) {
  }
  public void exitLexerCommandName(@NotNull ANTLRv4Parser.LexerCommandNameContext context) {
  }
  public void enterLexerCommandExpr(@NotNull ANTLRv4Parser.LexerCommandExprContext context) {
  }
  public void exitLexerCommandExpr(@NotNull ANTLRv4Parser.LexerCommandExprContext context) {
  }
  public void enterAltList(@NotNull ANTLRv4Parser.AltListContext context) {
  }
  public void exitAltList(@NotNull ANTLRv4Parser.AltListContext context) {
  }
  public void enterAlternative(@NotNull ANTLRv4Parser.AlternativeContext context) {
    if (alternatives == null) {
      alternatives = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe31132d842L, "org.campagnelab.ANTLR.structure.Alternatives")));
      SLinkOperations.getChildren(alternatives, MetaAdapterFactory.getContainmentLink(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe31132d842L, 0x631eebe31132d969L, "oneOf")).clear();
    }
    alt = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe3113b458fL, "org.campagnelab.ANTLR.structure.Alternative")));
  }
  public void exitAlternative(@NotNull ANTLRv4Parser.AlternativeContext context) {
    SLinkOperations.setTarget(alt, MetaAdapterFactory.getContainmentLink(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe3113b458fL, 0x631eebe3113b4590L, "rhs"), currentElement);
    ListSequence.fromList(SLinkOperations.getChildren(alternatives, MetaAdapterFactory.getContainmentLink(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe31132d842L, 0x631eebe31132d969L, "oneOf"))).addElement(alt);
  }
  /*package*/ SNode currentElement;
  public void enterElement(@NotNull ANTLRv4Parser.ElementContext context) {
  }
  public void exitElement(@NotNull ANTLRv4Parser.ElementContext context) {
    if (context.atom() != null) {
      currentElement = createRef(context.atom().getText());
    }
    if (currentElement != null && context.ebnfSuffix() != null) {
      String question = context.ebnfSuffix().getText();
      if ("?".equals(question)) {
        SPropertyOperations.set(currentElement, MetaAdapterFactory.getProperty(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe31132d843L, 0x631eebe3113c4245L, "isOptional"), "" + (true));
      }
      if ("+".equals(question)) {
        SPropertyOperations.set(currentElement, MetaAdapterFactory.getProperty(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe31132d843L, 0x72827882b897b9d5L, "plus"), "" + (true));
      }
      if ("*".equals(question)) {
        SPropertyOperations.set(currentElement, MetaAdapterFactory.getProperty(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x631eebe31132d843L, 0x631eebe3113c4247L, "acceptMultiple"), "" + (true));
      }

    }
  }
  public void enterLabeledElement(@NotNull ANTLRv4Parser.LabeledElementContext context) {
  }
  public void exitLabeledElement(@NotNull ANTLRv4Parser.LabeledElementContext context) {
    if (context.atom() != null) {
      currentElement = createRef(context.atom().getText());
    }
  }
  public void enterEbnf(@NotNull ANTLRv4Parser.EbnfContext context) {
  }
  public void exitEbnf(@NotNull ANTLRv4Parser.EbnfContext context) {
  }
  public void enterBlockSuffix(@NotNull ANTLRv4Parser.BlockSuffixContext context) {
  }
  public void exitBlockSuffix(@NotNull ANTLRv4Parser.BlockSuffixContext context) {
  }
  public void enterEbnfSuffix(@NotNull ANTLRv4Parser.EbnfSuffixContext context) {
  }
  public void exitEbnfSuffix(@NotNull ANTLRv4Parser.EbnfSuffixContext context) {
  }
  public void enterLexerAtom(@NotNull ANTLRv4Parser.LexerAtomContext context) {
  }
  public void exitLexerAtom(@NotNull ANTLRv4Parser.LexerAtomContext context) {
  }
  public void enterAtom(@NotNull ANTLRv4Parser.AtomContext context) {
  }
  public void exitAtom(@NotNull ANTLRv4Parser.AtomContext context) {
  }
  public void enterNotSet(@NotNull ANTLRv4Parser.NotSetContext context) {
  }
  public void exitNotSet(@NotNull ANTLRv4Parser.NotSetContext context) {
  }
  public void enterBlockSet(@NotNull ANTLRv4Parser.BlockSetContext context) {
  }
  public void exitBlockSet(@NotNull ANTLRv4Parser.BlockSetContext context) {
  }
  public void enterSetElement(@NotNull ANTLRv4Parser.SetElementContext context) {
  }
  public void exitSetElement(@NotNull ANTLRv4Parser.SetElementContext context) {
  }
  public void enterBlock(@NotNull ANTLRv4Parser.BlockContext context) {
  }
  public void exitBlock(@NotNull ANTLRv4Parser.BlockContext context) {
  }
  public void enterRuleref(@NotNull ANTLRv4Parser.RulerefContext context) {
  }
  /*package*/ List<SNode> refs = new ArrayList<SNode>();

  public void exitRuleref(@NotNull ANTLRv4Parser.RulerefContext context) {
    SNode ruleRef = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x1ebae6380de70d78L, "org.campagnelab.ANTLR.structure.RuleRefByName")));
    SPropertyOperations.set(ruleRef, MetaAdapterFactory.getProperty(0xd6782141eafa4cf7L, 0xa85d1229abdb1152L, 0x1ebae6380de70d78L, 0x1ebae6380de70d79L, "name"), context.RULE_REF().getText());
    ListSequence.fromList(refs).addElement(ruleRef);
  }
  public void enterRange(@NotNull ANTLRv4Parser.RangeContext context) {
  }
  public void exitRange(@NotNull ANTLRv4Parser.RangeContext context) {
  }
  public void enterTerminal(@NotNull ANTLRv4Parser.TerminalContext context) {
  }
  public void exitTerminal(@NotNull ANTLRv4Parser.TerminalContext context) {
  }
  public void enterElementOptions(@NotNull ANTLRv4Parser.ElementOptionsContext context) {
  }
  public void exitElementOptions(@NotNull ANTLRv4Parser.ElementOptionsContext context) {
  }
  public void enterElementOption(@NotNull ANTLRv4Parser.ElementOptionContext context) {
  }
  public void exitElementOption(@NotNull ANTLRv4Parser.ElementOptionContext context) {
  }
  public void enterId(@NotNull ANTLRv4Parser.IdContext context) {
  }
  public void exitId(@NotNull ANTLRv4Parser.IdContext context) {
  }
  public void visitTerminal(TerminalNode node) {
  }
  public void visitErrorNode(ErrorNode node) {
  }
  public void enterEveryRule(ParserRuleContext context) {
  }
  public void exitEveryRule(ParserRuleContext context) {
  }
  public List<SNode> getRules() {
    return rules;
  }
  public ANTLRv4ParserListenerImpl(ANTLRv4Parser parser) {
    parser = parser;
  }
  protected static Logger LOG = LogManager.getLogger(ANTLRv4ParserListenerImpl.class);
}

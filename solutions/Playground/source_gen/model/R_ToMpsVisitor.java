package model;

/*Generated by MPS */

import org.campagnelab.antlr.r.parsers.RBaseVisitor;
import org.antlr.v4.runtime.tree.ParseTreeVisitor;
import org.antlr.v4.runtime.RuleContext;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.annotations.NotNull;
import org.campagnelab.antlr.r.parsers.R.ExprContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.campagnelab.antlr.r.parsers.R.[[Context;
import org.campagnelab.antlr.r.parsers.R.[Context;
import org.campagnelab.antlr.r.parsers.R.::Context;
import org.campagnelab.antlr.r.parsers.R.;
import org.campagnelab.antlr.r.parsers.R.^Context;
import org.campagnelab.antlr.r.parsers.R.-Context;
import org.campagnelab.antlr.r.parsers.R.:Context;
import org.campagnelab.antlr.r.parsers.R.UserOpContext;
import org.campagnelab.antlr.r.parsers.R.*Context;
import org.campagnelab.antlr.r.parsers.R.+Context;
import org.campagnelab.antlr.r.parsers.R.>Context;
import org.campagnelab.antlr.r.parsers.R.!Context;
import org.campagnelab.antlr.r.parsers.R.&Context;
import org.campagnelab.antlr.r.parsers.R.|Context;
import org.campagnelab.antlr.r.parsers.R.~Context;
import org.campagnelab.antlr.r.parsers.R.BinaryOperationContext;
import org.campagnelab.antlr.r.parsers.R.FunctionContext;
import org.campagnelab.antlr.r.parsers.R.(Context;
import org.campagnelab.antlr.r.parsers.R.{Context;
import org.campagnelab.antlr.r.parsers.R.IfContext;
import org.campagnelab.antlr.r.parsers.R.ForContext;
import org.campagnelab.antlr.r.parsers.R.WhileContext;
import org.campagnelab.antlr.r.parsers.R.RepeatContext;
import org.campagnelab.antlr.r.parsers.R.?Context;
import org.campagnelab.antlr.r.parsers.R.NextContext;
import org.campagnelab.antlr.r.parsers.R.BreakContext;
import org.campagnelab.antlr.r.parsers.R.IdContext;
import org.campagnelab.antlr.r.parsers.R.StringContext;
import org.campagnelab.antlr.r.parsers.R.HexContext;
import org.campagnelab.antlr.r.parsers.R.IntContext;
import org.campagnelab.antlr.r.parsers.R.FloatContext;
import org.campagnelab.antlr.r.parsers.R.ComplexContext;
import org.campagnelab.antlr.r.parsers.R.NullContext;
import org.campagnelab.antlr.r.parsers.R.NaContext;
import org.campagnelab.antlr.r.parsers.R.InfContext;
import org.campagnelab.antlr.r.parsers.R.NanContext;
import org.campagnelab.antlr.r.parsers.R.TrueContext;
import org.campagnelab.antlr.r.parsers.R.FalseContext;

public class R_ToMpsVisitor extends RBaseVisitor implements ParseTreeVisitor {

  public Object convert(Object o, boolean toString) {
    if (toString && o instanceof RuleContext) {
      return ((RuleContext) o).getText();
    }
    return o;
  }
  public SNode visitexprContext(@NotNull ExprContext context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f5cL, "org.campagnelab.metar.R.structure.Expr")));
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("[[")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f5dL, "org.campagnelab.metar.R.structure.[[Expr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("[")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f5eL, "org.campagnelab.metar.R.structure.[Expr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("::")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f5fL, "org.campagnelab.metar.R.structure.::Expr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("Dollar")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f60L, "org.campagnelab.metar.R.structure.DollarExpr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("^")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f61L, "org.campagnelab.metar.R.structure.^Expr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("-")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f62L, "org.campagnelab.metar.R.structure.-Expr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals(":")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f63L, "org.campagnelab.metar.R.structure.:Expr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("UserOp")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f64L, "org.campagnelab.metar.R.structure.UserOpExpr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("*")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f65L, "org.campagnelab.metar.R.structure.*Expr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("+")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f66L, "org.campagnelab.metar.R.structure.+Expr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals(">")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f67L, "org.campagnelab.metar.R.structure.>Expr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("!")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f68L, "org.campagnelab.metar.R.structure.!Expr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("&")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f69L, "org.campagnelab.metar.R.structure.&Expr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("|")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f6aL, "org.campagnelab.metar.R.structure.|Expr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("~")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f6bL, "org.campagnelab.metar.R.structure.~Expr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("~")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f6bL, "org.campagnelab.metar.R.structure.~Expr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("BinaryOperation")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x4aaf5f3861bb6069L, "org.campagnelab.metar.R.structure.BinaryOperationExpr")));
      // fill-in children: 
      SPropertyOperations.set(result, MetaAdapterFactory.getProperty(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x4aaf5f3861bb6069L, 0x4aaf5f3861bb67c9L, "operator"), "" + (convert(SLinkOperations.getTarget(result), true)));

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("Function")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f6cL, "org.campagnelab.metar.R.structure.FunctionExpr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("(")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f6dL, "org.campagnelab.metar.R.structure.(Expr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("{")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f6eL, "org.campagnelab.metar.R.structure.{Expr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("If")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f6fL, "org.campagnelab.metar.R.structure.IfExpr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("If")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f6fL, "org.campagnelab.metar.R.structure.IfExpr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("For")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f70L, "org.campagnelab.metar.R.structure.ForExpr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("While")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f71L, "org.campagnelab.metar.R.structure.WhileExpr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("Repeat")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f72L, "org.campagnelab.metar.R.structure.RepeatExpr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("?")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f73L, "org.campagnelab.metar.R.structure.?Expr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("Next")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f74L, "org.campagnelab.metar.R.structure.NextExpr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("Break")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f75L, "org.campagnelab.metar.R.structure.BreakExpr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("(")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f6dL, "org.campagnelab.metar.R.structure.(Expr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("Id")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f76L, "org.campagnelab.metar.R.structure.IdExpr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("String")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f77L, "org.campagnelab.metar.R.structure.StringExpr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("Hex")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f78L, "org.campagnelab.metar.R.structure.HexExpr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("Int")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f79L, "org.campagnelab.metar.R.structure.IntExpr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("Float")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f7aL, "org.campagnelab.metar.R.structure.FloatExpr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("Complex")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f7bL, "org.campagnelab.metar.R.structure.ComplexExpr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("Null")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f7cL, "org.campagnelab.metar.R.structure.NullExpr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("Na")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f7dL, "org.campagnelab.metar.R.structure.NaExpr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("Inf")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f7eL, "org.campagnelab.metar.R.structure.InfExpr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("Nan")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f7fL, "org.campagnelab.metar.R.structure.NanExpr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("True")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f80L, "org.campagnelab.metar.R.structure.TrueExpr")));
      // fill-in children: 

    }
    if (context.subConceptPrefix() != null && context.subConceptPrefix().getText().equals("False")) {
      result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f81L, "org.campagnelab.metar.R.structure.FalseExpr")));
      // fill-in children: 

    }
    // fill-in children: 
    SPropertyOperations.set(result, MetaAdapterFactory.getProperty(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x4aaf5f3861bb6069L, 0x4aaf5f3861bb67c9L, "operator"), "" + (convert(SLinkOperations.getTarget(result), true)));

    return result;
  }
  public SNode visit[[Context(@NotNull [[Context context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f5dL, "org.campagnelab.metar.R.structure.[[Expr")));
    // fill-in children: 

    return result;
  }
  public SNode visit[Context(@NotNull [Context context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f5eL, "org.campagnelab.metar.R.structure.[Expr")));
    // fill-in children: 

    return result;
  }
  public SNode visit::Context(@NotNull ::Context context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f5fL, "org.campagnelab.metar.R.structure.::Expr")));
    // fill-in children: 

    return result;
  }
  public SNode visitDollarContext(@NotNull .Context context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f60L, "org.campagnelab.metar.R.structure.DollarExpr")));
    // fill-in children: 

    return result;
  }
  public SNode visit^Context(@NotNull ^Context context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f61L, "org.campagnelab.metar.R.structure.^Expr")));
    // fill-in children: 

    return result;
  }
  public SNode visit-Context(@NotNull -Context context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f62L, "org.campagnelab.metar.R.structure.-Expr")));
    // fill-in children: 

    return result;
  }
  public SNode visit:Context(@NotNull :Context context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f63L, "org.campagnelab.metar.R.structure.:Expr")));
    // fill-in children: 

    return result;
  }
  public SNode visitUserOpContext(@NotNull UserOpContext context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f64L, "org.campagnelab.metar.R.structure.UserOpExpr")));
    // fill-in children: 

    return result;
  }
  public SNode visit*Context(@NotNull *Context context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f65L, "org.campagnelab.metar.R.structure.*Expr")));
    // fill-in children: 

    return result;
  }
  public SNode visit+Context(@NotNull +Context context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f66L, "org.campagnelab.metar.R.structure.+Expr")));
    // fill-in children: 

    return result;
  }
  public SNode visit>Context(@NotNull >Context context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f67L, "org.campagnelab.metar.R.structure.>Expr")));
    // fill-in children: 

    return result;
  }
  public SNode visit!Context(@NotNull !Context context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f68L, "org.campagnelab.metar.R.structure.!Expr")));
    // fill-in children: 

    return result;
  }
  public SNode visit&Context(@NotNull &Context context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f69L, "org.campagnelab.metar.R.structure.&Expr")));
    // fill-in children: 

    return result;
  }
  public SNode visit|Context(@NotNull |Context context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f6aL, "org.campagnelab.metar.R.structure.|Expr")));
    // fill-in children: 

    return result;
  }
  public SNode visit~Context(@NotNull ~Context context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f6bL, "org.campagnelab.metar.R.structure.~Expr")));
    // fill-in children: 

    return result;
  }
  public SNode visit~Context(@NotNull ~Context context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f6bL, "org.campagnelab.metar.R.structure.~Expr")));
    // fill-in children: 

    return result;
  }
  public SNode visitBinaryOperationContext(@NotNull BinaryOperationContext context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x4aaf5f3861bb6069L, "org.campagnelab.metar.R.structure.BinaryOperationExpr")));
    // fill-in children: 
    SPropertyOperations.set(result, MetaAdapterFactory.getProperty(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x4aaf5f3861bb6069L, 0x4aaf5f3861bb67c9L, "operator"), "" + (convert(SLinkOperations.getTarget(result), true)));

    return result;
  }
  public SNode visitFunctionContext(@NotNull FunctionContext context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f6cL, "org.campagnelab.metar.R.structure.FunctionExpr")));
    // fill-in children: 

    return result;
  }
  public SNode visit(Context(@NotNull (Context context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f6dL, "org.campagnelab.metar.R.structure.(Expr")));
    // fill-in children: 

    return result;
  }
  public SNode visit{Context(@NotNull {Context context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f6eL, "org.campagnelab.metar.R.structure.{Expr")));
    // fill-in children: 

    return result;
  }
  public SNode visitIfContext(@NotNull IfContext context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f6fL, "org.campagnelab.metar.R.structure.IfExpr")));
    // fill-in children: 

    return result;
  }
  public SNode visitIfContext(@NotNull IfContext context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f6fL, "org.campagnelab.metar.R.structure.IfExpr")));
    // fill-in children: 

    return result;
  }
  public SNode visitForContext(@NotNull ForContext context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f70L, "org.campagnelab.metar.R.structure.ForExpr")));
    // fill-in children: 

    return result;
  }
  public SNode visitWhileContext(@NotNull WhileContext context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f71L, "org.campagnelab.metar.R.structure.WhileExpr")));
    // fill-in children: 

    return result;
  }
  public SNode visitRepeatContext(@NotNull RepeatContext context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f72L, "org.campagnelab.metar.R.structure.RepeatExpr")));
    // fill-in children: 

    return result;
  }
  public SNode visit?Context(@NotNull ?Context context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f73L, "org.campagnelab.metar.R.structure.?Expr")));
    // fill-in children: 

    return result;
  }
  public SNode visitNextContext(@NotNull NextContext context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f74L, "org.campagnelab.metar.R.structure.NextExpr")));
    // fill-in children: 

    return result;
  }
  public SNode visitBreakContext(@NotNull BreakContext context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f75L, "org.campagnelab.metar.R.structure.BreakExpr")));
    // fill-in children: 

    return result;
  }
  public SNode visit(Context(@NotNull (Context context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f6dL, "org.campagnelab.metar.R.structure.(Expr")));
    // fill-in children: 

    return result;
  }
  public SNode visitIdContext(@NotNull IdContext context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f76L, "org.campagnelab.metar.R.structure.IdExpr")));
    // fill-in children: 

    return result;
  }
  public SNode visitStringContext(@NotNull StringContext context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f77L, "org.campagnelab.metar.R.structure.StringExpr")));
    // fill-in children: 

    return result;
  }
  public SNode visitHexContext(@NotNull HexContext context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f78L, "org.campagnelab.metar.R.structure.HexExpr")));
    // fill-in children: 

    return result;
  }
  public SNode visitIntContext(@NotNull IntContext context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f79L, "org.campagnelab.metar.R.structure.IntExpr")));
    // fill-in children: 

    return result;
  }
  public SNode visitFloatContext(@NotNull FloatContext context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f7aL, "org.campagnelab.metar.R.structure.FloatExpr")));
    // fill-in children: 

    return result;
  }
  public SNode visitComplexContext(@NotNull ComplexContext context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f7bL, "org.campagnelab.metar.R.structure.ComplexExpr")));
    // fill-in children: 

    return result;
  }
  public SNode visitNullContext(@NotNull NullContext context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f7cL, "org.campagnelab.metar.R.structure.NullExpr")));
    // fill-in children: 

    return result;
  }
  public SNode visitNaContext(@NotNull NaContext context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f7dL, "org.campagnelab.metar.R.structure.NaExpr")));
    // fill-in children: 

    return result;
  }
  public SNode visitInfContext(@NotNull InfContext context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f7eL, "org.campagnelab.metar.R.structure.InfExpr")));
    // fill-in children: 

    return result;
  }
  public SNode visitNanContext(@NotNull NanContext context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f7fL, "org.campagnelab.metar.R.structure.NanExpr")));
    // fill-in children: 

    return result;
  }
  public SNode visitTrueContext(@NotNull TrueContext context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f80L, "org.campagnelab.metar.R.structure.TrueExpr")));
    // fill-in children: 

    return result;
  }
  public SNode visitFalseContext(@NotNull FalseContext context) {
    SNode result = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3b58810c84314bbbL, 0x99eab4671e02dd13L, 0x7bf8b2dbbfdd5f81L, "org.campagnelab.metar.R.structure.FalseExpr")));
    // fill-in children: 

    return result;
  }


}

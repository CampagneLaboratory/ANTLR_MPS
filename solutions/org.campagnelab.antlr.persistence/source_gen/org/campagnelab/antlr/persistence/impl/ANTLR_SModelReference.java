package org.campagnelab.antlr.persistence.impl;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SModelReference;
import org.jetbrains.mps.openapi.model.SModelId;
import org.jetbrains.mps.openapi.module.SModuleReference;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SModel;
import org.jetbrains.mps.openapi.module.SRepository;
import java.util.Map;
import java.util.HashMap;
import org.jetbrains.mps.openapi.persistence.ModelFactory;

public class ANTLR_SModelReference implements SModelReference {
  /*package*/ AntlrPersistenceImpl persistence;
  /*package*/ SModelId modelId;
  /*package*/ SModuleReference moduleReference;
  /*package*/ String modelName;
  /*package*/ OneANTLRFilePerRoot dataSource;
  @NotNull
  public SModelId getModelId() {
    return modelId;
  }
  @NotNull
  public String getModelName() {
    return modelName;
  }
  public SModuleReference getModuleReference() {
    return moduleReference;
  }
  public SModel resolve(SRepository repository) {
    Map<String, String> options = new HashMap<String, String>();
    String moduleRef = options.put(ModelFactory.OPTION_MODULEREF, moduleRef.<!TextGen not found for 'jetbrains.mps.baseLanguage.structure.AbstractOperation'!>);
    String relPath = options.get(ModelFactory.OPTION_RELPATH);
    String modelName = options.get(ModelFactory.OPTION_MODELNAME);
    return persistence.load(dataSource, <!TextGen not found for 'jetbrains.mps.baseLanguage.structure.Expression'!>);
  }
}
